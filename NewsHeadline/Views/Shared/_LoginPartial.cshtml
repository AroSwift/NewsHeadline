@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IUserSettingRepository UserRepo

<div class="col float-right">
    @if (SignInManager.IsSignedIn(User))
    {
        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="float-right">
            <ul class="nav navbar-nav navbar-right">

                @if (UserRepo.Read(User.Identity.Name) != null && UserRepo.Read(User.Identity.Name).FirstName != null && UserRepo.Read(User.Identity.Name).FirstName != "")
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @UserRepo.Read(User.Identity.Name).FirstName!</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @User.Identity.Name!</a>
                    </li>
                }

                <li class="nav-item">
                    <button type="submit" class="btn btn-link navbar-btn navbar-link nav-link">Logout</button>
                </li>
            </ul>
        </form>
    }
    else
    {
        <ul class="nav navbar-nav navbar-right float-right">
            <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a></li>
            <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a></li>
        </ul>
    }
</div>